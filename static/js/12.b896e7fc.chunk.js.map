{"version":3,"sources":["components/organisms/FilterCategories/FilterCategories.styles.js","components/organisms/FilterCategories/FilterCategories.js","components/organisms/FilterSort/FilterSort.styles.js","components/organisms/FilterSort/FilterSort.js","templates/ProductsPageTemplate/ProductsPageTemplate.styles.js","templates/ProductsPageTemplate/ProductsPageTemplate.js","hooks/useSorting.js"],"names":["StyledSlideOut","styled","SlideOut","breakpoints","desktop","Header","header","colors","veryLightGrey","Title","Text","darkGrey","sizes","l","FiltersCloseButton","button","Content","div","CategoryName","main","css","FilterCategories","dispatch","useDispatch","filterState","useSelector","store","nav","filter","slideType","isVisible","textType","onClick","closeFilter","map","category","index","as","Link","to","SortCloseButton","SortName","FilterSort","setSortOption","sortState","sort","closeSort","option","event","value","currentTarget","innerHTML","CategoriesWrapper","bigPhone","Category","ProductsPageTemplate","useState","sortOption","title","useParams","id","sortOptions","desktopView","useMediaQuery","query","AnimatedProductCard","animated","ProductCard","transition","useTransition","from","y","opacity","enter","sortAlphabetical","array","a","b","first","name","toLowerCase","second","localeCompare","sortAlphabeticalReverse","sortByPrice","price","openFilterSort","openSort","productsQuery","useContent","useQuery","loading","error","data","products","allProducts","filteredProducts","item","MainTemplate","toUpperCase","openFilter","ProductsCategory","productsFn","srcSet","productVisualisation","responsiveImage","style","img"],"mappings":"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","file":"static/js/12.b896e7fc.chunk.js","sourcesContent":["import styled, { css } from 'styled-components';\r\nimport { colors, breakpoints, sizes } from 'theme/theme';\r\nimport SlideOut from 'components/molecules/SlideOut/SlideOut';\r\nimport Text from 'components/atoms/Text/Text';\r\n\r\nexport const StyledSlideOut = styled(SlideOut)`\r\n  box-shadow: -10px 0px 8px 1px rgba(99, 99, 98, 0.36);\r\n  grid-template-rows: 10% 90%;\r\n\r\n  @media ${breakpoints.desktop} {\r\n    position: static;\r\n    transform: translateX(0);\r\n    height: 100%;\r\n    background-color: transparent;\r\n    box-shadow: none;\r\n    grid-column: 1;\r\n    grid-row: 1;\r\n    z-index: 2;\r\n  }\r\n`;\r\n\r\nexport const Header = styled.header`\r\n  display: grid;\r\n  justify-items: center;\r\n  align-items: center;\r\n  grid-template-columns: 85% 15%;\r\n  border-bottom: 1px solid ${colors.veryLightGrey};\r\n  margin: 0;\r\n  position: relative;\r\n\r\n  @media ${breakpoints.desktop} {\r\n    display: none;\r\n  }\r\n`;\r\n\r\nexport const Title = styled(Text)`\r\n  color: ${colors.darkGrey};\r\n  font-size: ${sizes.l};\r\n  position: absolute;\r\n`;\r\n\r\nexport const FiltersCloseButton = styled.button`\r\n  background-color: transparent;\r\n  margin: 0;\r\n  border: none;\r\n  cursor: pointer;\r\n  font-size: ${sizes.l};\r\n  grid-column: 2;\r\n`;\r\n\r\nexport const Content = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  padding: 0 20px;\r\n`;\r\n\r\nexport const CategoryName = styled(Text)`\r\n  color: ${colors.darkGrey};\r\n  font-weight: normal;\r\n  padding: 5px 0;\r\n\r\n  ${({ main }) =>\r\n    main &&\r\n    css`\r\n      font-weight: bold;\r\n      padding: 20px 0;\r\n\r\n      @media ${breakpoints.desktop} {\r\n        padding: 0 0 20px 0;\r\n      }\r\n    `}\r\n`;\r\n","import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { closeFilter } from 'store/navigation';\r\nimport {\r\n  FiltersCloseButton,\r\n  Header,\r\n  Title,\r\n  StyledSlideOut,\r\n  Content,\r\n  CategoryName,\r\n} from './FilterCategories.styles';\r\n\r\nconst FilterCategories = () => {\r\n  const dispatch = useDispatch();\r\n  const filterState = useSelector((store) => store.nav.filter);\r\n  const categories = ['notatnik', 'dÅ‚ugopis', 'kartka'];\r\n  const closeFilterCategories = () => dispatch(closeFilter(false));\r\n\r\n  return (\r\n    <StyledSlideOut slideType=\"right\" isVisible={filterState}>\r\n      <Header>\r\n        <Title textType=\"h2\">Filtry</Title>\r\n        <FiltersCloseButton onClick={closeFilterCategories}>\r\n          X\r\n        </FiltersCloseButton>\r\n      </Header>\r\n      <Content>\r\n        <CategoryName textType=\"h3\" main>\r\n          Kategorie\r\n        </CategoryName>\r\n        {categories.map((category, index) => (\r\n          <CategoryName\r\n            key={index}\r\n            as={Link}\r\n            to={`/sklep/kolekcja/${category}`}\r\n          >\r\n            {category}\r\n          </CategoryName>\r\n        ))}\r\n      </Content>\r\n    </StyledSlideOut>\r\n  );\r\n};\r\n\r\nexport default FilterCategories;\r\n","import styled from 'styled-components';\r\nimport { colors, breakpoints, sizes } from 'theme/theme';\r\nimport SlideOut from 'components/molecules/SlideOut/SlideOut';\r\nimport Text from 'components/atoms/Text/Text';\r\n\r\nexport const StyledSlideOut = styled(SlideOut)`\r\n  box-shadow: 0px -10px 8px 1px rgba(99, 99, 98, 0.36);\r\n  grid-template-rows: 20% 80%;\r\n\r\n  @media ${breakpoints.desktop} {\r\n    position: absolute;\r\n    width: 20%;\r\n    height: fit-content;\r\n    box-shadow: -5px -10px 20px -15px rgba(0, 0, 0, 0.75);\r\n    padding: 20px;\r\n    top: -20px;\r\n    right: 3px;\r\n    border: 1px solid ${colors.veryLightGrey};\r\n\r\n    &:before {\r\n      content: '';\r\n      height: 15px;\r\n      width: 15px;\r\n      transform: rotate(45deg);\r\n      top: -8px;\r\n      right: 20%;\r\n      position: absolute;\r\n      background-color: white;\r\n      border-left: 1px solid ${colors.veryLightGrey};\r\n      border-top: 1px solid ${colors.veryLightGrey};\r\n    }\r\n  }\r\n`;\r\n\r\nexport const Header = styled.header`\r\n  display: grid;\r\n  justify-items: center;\r\n  align-items: center;\r\n  grid-template-columns: 15% 85%;\r\n  border-bottom: 1px solid ${colors.veryLightGrey};\r\n  margin: 0;\r\n  position: relative;\r\n\r\n  @media ${breakpoints.desktop} {\r\n    display: none;\r\n  }\r\n`;\r\n\r\nexport const Title = styled(Text)`\r\n  color: ${colors.darkGrey};\r\n  font-size: ${sizes.l};\r\n  position: absolute;\r\n`;\r\n\r\nexport const SortCloseButton = styled.button`\r\n  background-color: transparent;\r\n  margin: 0;\r\n  border: none;\r\n  cursor: pointer;\r\n  font-size: ${sizes.l};\r\n  grid-column: 1;\r\n`;\r\n\r\nexport const Content = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  /* justify-content: center; */\r\n`;\r\n\r\nexport const SortName = styled(Text)`\r\n  color: ${colors.darkGrey};\r\n  font-weight: normal;\r\n  padding: 5px 0;\r\n  cursor: pointer;\r\n`;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { closeSort } from 'store/navigation';\r\nimport {\r\n  StyledSlideOut,\r\n  Header,\r\n  Title,\r\n  SortCloseButton,\r\n  SortName,\r\n  Content,\r\n} from './FilterSort.styles';\r\n\r\nconst FilterSort = ({ setSortOption }) => {\r\n  const dispatch = useDispatch();\r\n  const sortState = useSelector((store) => store.nav.sort);\r\n  const sortOptions = ['A-Z', 'Z-A', 'Od najtaÅ„szej'];\r\n  const closeFilterSort = () => dispatch(closeSort(false));\r\n  const handleSortOption = (value) => setSortOption(value);\r\n\r\n  return (\r\n    <StyledSlideOut slideType=\"bottom\" isVisible={sortState}>\r\n      <Header>\r\n        <SortCloseButton onClick={closeFilterSort}>X</SortCloseButton>\r\n        <Title textType=\"h2\">Sortuj</Title>\r\n      </Header>\r\n      <Content>\r\n        {sortOptions.map((option, index) => (\r\n          <SortName\r\n            key={index}\r\n            textType=\"h3\"\r\n            onClick={(event) => handleSortOption(event.currentTarget.innerHTML)}\r\n          >\r\n            {option}\r\n          </SortName>\r\n        ))}\r\n      </Content>\r\n    </StyledSlideOut>\r\n  );\r\n};\r\n\r\nFilterSort.propTypes = {\r\n  setSortOption: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default FilterSort;\r\n","import styled from 'styled-components';\r\nimport Text from 'components/atoms/Text/Text';\r\nimport { breakpoints, colors } from 'theme/theme';\r\n\r\nexport const Header = styled.header`\r\n  display: grid;\r\n  grid-template-rows: 65% 35%;\r\n  width: 100%;\r\n  margin: 0 0 20px;\r\n  justify-items: center;\r\n  align-items: center;\r\n\r\n  @media ${breakpoints.desktop} {\r\n    margin: 0 0 40px;\r\n  }\r\n`;\r\n\r\nexport const Title = styled(Text)`\r\n  font-size: 1.5rem;\r\n  height: 100%;\r\n  margin: 0;\r\n  padding: 30px 0;\r\n  color: ${colors.darkGrey};\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n`;\r\n\r\nexport const CategoriesWrapper = styled.div`\r\n  display: flex;\r\n  width: 100%;\r\n  height: 100%;\r\n\r\n  @media ${breakpoints.bigPhone} {\r\n    justify-content: flex-end;\r\n    border: 1px solid ${colors.veryLightGrey};\r\n  }\r\n`;\r\n\r\nexport const Category = styled(Text)`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  width: 50%;\r\n  height: 100%;\r\n  cursor: pointer;\r\n  border: 1px solid ${colors.veryLightGrey};\r\n  font-weight: normal;\r\n  padding: 25px 0;\r\n  margin: 0;\r\n\r\n  @media ${breakpoints.bigPhone} {\r\n    width: 25%;\r\n    border: none;\r\n    border-left: 1px solid ${colors.veryLightGrey};\r\n  }\r\n\r\n  @media ${breakpoints.desktop} {\r\n    width: 20%;\r\n\r\n    &:first-child {\r\n      display: none;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const Content = styled.div`\r\n  @media ${breakpoints.desktop} {\r\n    display: grid;\r\n    grid-template-columns: 15% 85%;\r\n    position: relative;\r\n    width: 100%;\r\n    overflow: hidden;\r\n  }\r\n`;\r\n","import React, { useState } from 'react';\r\nimport { useMediaQuery } from 'react-responsive';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { openFilter, openSort } from 'store/navigation';\r\nimport { animated, useTransition } from '@react-spring/web';\r\nimport { useQuery } from 'graphql-hooks';\r\nimport { useParams } from 'react-router-dom';\r\nimport { useContent } from 'hooks/useContent';\r\nimport { useSorting } from 'hooks/useSorting';\r\nimport { breakpoints } from 'theme/theme';\r\nimport ProductCard from 'components/molecules/ProductCard/ProductCard';\r\nimport MainTemplate from 'templates/MainTemplate/MainTemplate';\r\nimport FilterCategories from 'components/organisms/FilterCategories/FilterCategories';\r\nimport ProductsCategory from 'components/organisms/ProductsCategory/ProductsCategory';\r\nimport FilterSort from 'components/organisms/FilterSort/FilterSort';\r\nimport {\r\n  CategoriesWrapper,\r\n  Header,\r\n  Title,\r\n  Category,\r\n  Content,\r\n} from './ProductsPageTemplate.styles';\r\n\r\nconst ProductsPageTemplate = () => {\r\n  const [sortOption, setSortOption] = useState('');\r\n  const { id: title } = useParams();\r\n  const dispatch = useDispatch();\r\n  const sortState = useSelector((store) => store.nav.sort);\r\n  const sortOptions = {\r\n    alphabetical: 'A-Z',\r\n    reverse: 'Z-A',\r\n    byPrice: 'Od najtaÅ„szej',\r\n  };\r\n  const desktopView = useMediaQuery({ query: breakpoints.desktop });\r\n  const AnimatedProductCard = animated(ProductCard);\r\n  const transition = useTransition(sortOption, {\r\n    from: { y: 100, opacity: 0 },\r\n    enter: { y: 0, opacity: 1 },\r\n  });\r\n  const { sortAlphabetical, sortAlphabeticalReverse, sortByPrice } =\r\n    useSorting();\r\n  const openFilterCategories = () => dispatch(openFilter(true));\r\n  const openFilterSort = () =>\r\n    dispatch(openSort(desktopView ? !sortState : true));\r\n\r\n  const { productsQuery } = useContent();\r\n  const { loading, error, data } = useQuery(productsQuery);\r\n  if (loading) return 'Loading...';\r\n  if (error) return 'Something Bad Happened';\r\n\r\n  const products = data.allProducts;\r\n  const filteredProducts = title\r\n    ? products.filter((item) => item.category === title)\r\n    : products;\r\n\r\n  const productsFn = () => {\r\n    switch (sortOption) {\r\n      case sortOptions.alphabetical:\r\n        return sortAlphabetical(filteredProducts);\r\n      case sortOptions.reverse:\r\n        return sortAlphabeticalReverse(filteredProducts);\r\n      case sortOptions.byPrice:\r\n        return sortByPrice(filteredProducts);\r\n      default:\r\n        return filteredProducts;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <MainTemplate>\r\n      <Header>\r\n        <Title textType=\"h2\">{title ? title.toUpperCase() : 'POLECAMY'}</Title>\r\n        <CategoriesWrapper>\r\n          <Category textType=\"h3\" onClick={openFilterCategories}>\r\n            Kategorie\r\n          </Category>\r\n          <Category textType=\"h3\" onClick={openFilterSort}>\r\n            Sortuj\r\n          </Category>\r\n        </CategoriesWrapper>\r\n      </Header>\r\n      <Content>\r\n        <ProductsCategory>\r\n          {productsFn().map(\r\n            ({\r\n              id,\r\n              name,\r\n              price,\r\n              productVisualisation: {\r\n                responsiveImage: { srcSet },\r\n              },\r\n            }) =>\r\n              transition((style) => (\r\n                <AnimatedProductCard\r\n                  style={style}\r\n                  name={name}\r\n                  price={price}\r\n                  img={srcSet}\r\n                  key={id}\r\n                  id={id}\r\n                />\r\n              ))\r\n          )}\r\n        </ProductsCategory>\r\n        <FilterCategories />\r\n        <FilterSort onClick={openFilterSort} setSortOption={setSortOption} />\r\n      </Content>\r\n    </MainTemplate>\r\n  );\r\n};\r\n\r\nexport default ProductsPageTemplate;\r\n","export const useSorting = () => {\r\n  const sortAlphabetical = (array) =>\r\n    array.sort((a, b) => {\r\n      const first = a.name.toLowerCase();\r\n      const second = b.name.toLowerCase();\r\n      return first.localeCompare(second);\r\n    });\r\n\r\n  const sortAlphabeticalReverse = (array) =>\r\n    array.sort((a, b) => {\r\n      const first = a.name.toLowerCase();\r\n      const second = b.name.toLowerCase();\r\n      return second.localeCompare(first);\r\n    });\r\n\r\n  const sortByPrice = (array) =>\r\n    array.sort((a, b) => {\r\n      const first = a.price;\r\n      const second = b.price;\r\n      return first - second;\r\n    });\r\n\r\n  return { sortAlphabetical, sortAlphabeticalReverse, sortByPrice };\r\n};\r\n"],"sourceRoot":""}