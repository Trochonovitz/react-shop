{"version":3,"sources":["components/organisms/FilterCategories/FilterCategories.styles.js","components/organisms/FilterCategories/FilterCategories.js","components/organisms/FilterSort/FilterSort.styles.js","components/organisms/FilterSort/FilterSort.js","pages/ShopPage/ShopPage.styles.js","pages/ShopPage/ShopPage.js","hooks/useSorting.js"],"names":["StyledSlideOut","styled","SlideOut","breakpoints","desktop","Header","header","colors","veryLightGrey","Title","Text","darkGrey","sizes","l","FiltersCloseButton","button","Content","div","CategoryName","main","css","FilterCategories","dispatch","useDispatch","filterState","useSelector","store","nav","filter","slideType","isVisible","textType","onClick","closeFilter","map","category","index","as","Link","to","SortCloseButton","SortName","FilterSort","setSortOption","sortState","sort","closeSort","option","event","value","currentTarget","innerHTML","Wrapper","CategoriesWrapper","bigPhone","Category","ShopPage","useState","sortOption","title","useParams","id","sortOptions","desktopView","useMediaQuery","query","sortAlphabetical","array","a","b","first","name","toLowerCase","second","localeCompare","sortAlphabeticalReverse","sortByPrice","price","openFilterSort","openSort","productsQuery","useContent","useQuery","loading","error","data","products","allProducts","MainTemplate","toUpperCase","openFilter","Products","filteredProducts","item","handleProducts"],"mappings":"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","file":"static/js/11.91e74b14.chunk.js","sourcesContent":["import styled, { css } from 'styled-components';\r\nimport { colors, breakpoints, sizes } from 'theme/theme';\r\nimport SlideOut from 'components/molecules/SlideOut/SlideOut';\r\nimport Text from 'components/atoms/Text/Text';\r\n\r\nexport const StyledSlideOut = styled(SlideOut)`\r\n  box-shadow: -10px 0px 8px 1px rgba(99, 99, 98, 0.36);\r\n  grid-template-rows: 10% 90%;\r\n\r\n  @media ${breakpoints.desktop} {\r\n    position: static;\r\n    transform: translateX(0);\r\n    height: 100%;\r\n    background-color: transparent;\r\n    box-shadow: none;\r\n    grid-column: 1;\r\n    grid-row: 1;\r\n    z-index: 2;\r\n  }\r\n`;\r\n\r\nexport const Header = styled.header`\r\n  display: grid;\r\n  justify-items: center;\r\n  align-items: center;\r\n  grid-template-columns: 85% 15%;\r\n  border-bottom: 1px solid ${colors.veryLightGrey};\r\n  margin: 0;\r\n  position: relative;\r\n\r\n  @media ${breakpoints.desktop} {\r\n    display: none;\r\n  }\r\n`;\r\n\r\nexport const Title = styled(Text)`\r\n  color: ${colors.darkGrey};\r\n  font-size: ${sizes.l};\r\n  position: absolute;\r\n`;\r\n\r\nexport const FiltersCloseButton = styled.button`\r\n  background-color: transparent;\r\n  margin: 0;\r\n  border: none;\r\n  cursor: pointer;\r\n  font-size: ${sizes.l};\r\n  grid-column: 2;\r\n`;\r\n\r\nexport const Content = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  padding: 0 20px;\r\n`;\r\n\r\nexport const CategoryName = styled(Text)`\r\n  color: ${colors.darkGrey};\r\n  font-weight: normal;\r\n  padding: 5px 0;\r\n  text-decoration: none;\r\n  text-transform: uppercase;\r\n\r\n  ${({ main }) =>\r\n    main &&\r\n    css`\r\n      font-weight: bold;\r\n      padding: 20px 0;\r\n\r\n      @media ${breakpoints.desktop} {\r\n        padding: 0 0 20px 0;\r\n      }\r\n    `}\r\n`;\r\n","import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { closeFilter } from 'store/navigation';\r\nimport {\r\n  FiltersCloseButton,\r\n  Header,\r\n  Title,\r\n  StyledSlideOut,\r\n  Content,\r\n  CategoryName,\r\n} from './FilterCategories.styles';\r\n\r\nconst FilterCategories = () => {\r\n  const dispatch = useDispatch();\r\n  const filterState = useSelector((store) => store.nav.filter);\r\n  const categories = ['notatnik', 'dÅ‚ugopis', 'kartka'];\r\n  const closeFilterCategories = () => dispatch(closeFilter(false));\r\n\r\n  return (\r\n    <StyledSlideOut slideType=\"right\" isVisible={filterState}>\r\n      <Header>\r\n        <Title textType=\"h2\">Filtry</Title>\r\n        <FiltersCloseButton onClick={closeFilterCategories}>\r\n          X\r\n        </FiltersCloseButton>\r\n      </Header>\r\n      <Content>\r\n        <CategoryName textType=\"h3\" main>\r\n          Kategorie\r\n        </CategoryName>\r\n        {categories.map((category, index) => (\r\n          <CategoryName\r\n            key={index}\r\n            as={Link}\r\n            to={`/sklep/kolekcja/${category}`}\r\n          >\r\n            {category}\r\n          </CategoryName>\r\n        ))}\r\n      </Content>\r\n    </StyledSlideOut>\r\n  );\r\n};\r\n\r\nexport default FilterCategories;\r\n","import styled from 'styled-components';\r\nimport { colors, breakpoints, sizes } from 'theme/theme';\r\nimport SlideOut from 'components/molecules/SlideOut/SlideOut';\r\nimport Text from 'components/atoms/Text/Text';\r\n\r\nexport const StyledSlideOut = styled(SlideOut)`\r\n  box-shadow: 0px -10px 8px 1px rgba(99, 99, 98, 0.36);\r\n  grid-template-rows: 20% 80%;\r\n\r\n  @media ${breakpoints.desktop} {\r\n    position: absolute;\r\n    width: 20%;\r\n    height: fit-content;\r\n    box-shadow: -5px -20px 20px -15px rgba(0, 0, 0, 0.75);\r\n    padding: 20px;\r\n    top: -20px;\r\n    right: 3px;\r\n    border: 1px solid ${colors.veryLightGrey};\r\n\r\n    &:before {\r\n      content: '';\r\n      height: 15px;\r\n      width: 15px;\r\n      transform: rotate(45deg);\r\n      top: -8px;\r\n      right: 20%;\r\n      position: absolute;\r\n      background-color: white;\r\n      border-left: 1px solid ${colors.veryLightGrey};\r\n      border-top: 1px solid ${colors.veryLightGrey};\r\n    }\r\n  }\r\n`;\r\n\r\nexport const Header = styled.header`\r\n  display: grid;\r\n  justify-items: center;\r\n  align-items: center;\r\n  grid-template-columns: 15% 85%;\r\n  border-bottom: 1px solid ${colors.veryLightGrey};\r\n  margin: 0;\r\n  position: relative;\r\n\r\n  @media ${breakpoints.desktop} {\r\n    display: none;\r\n  }\r\n`;\r\n\r\nexport const Title = styled(Text)`\r\n  color: ${colors.darkGrey};\r\n  font-size: ${sizes.l};\r\n  position: absolute;\r\n`;\r\n\r\nexport const SortCloseButton = styled.button`\r\n  background-color: transparent;\r\n  margin: 0;\r\n  border: none;\r\n  cursor: pointer;\r\n  font-size: ${sizes.l};\r\n  grid-column: 1;\r\n`;\r\n\r\nexport const Content = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n`;\r\n\r\nexport const SortName = styled(Text)`\r\n  color: ${colors.darkGrey};\r\n  font-weight: normal;\r\n  padding: 5px 0;\r\n  cursor: pointer;\r\n`;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { closeSort } from 'store/navigation';\r\nimport {\r\n  StyledSlideOut,\r\n  Header,\r\n  Title,\r\n  SortCloseButton,\r\n  SortName,\r\n  Content,\r\n} from './FilterSort.styles';\r\n\r\nconst FilterSort = ({ setSortOption }) => {\r\n  const dispatch = useDispatch();\r\n  const sortState = useSelector((store) => store.nav.sort);\r\n  const sortOptions = ['A-Z', 'Z-A', 'Od najtaÅ„szej'];\r\n  const closeFilterSort = () => dispatch(closeSort(false));\r\n  const handleSortOption = (value) => setSortOption(value);\r\n\r\n  return (\r\n    <StyledSlideOut slideType=\"bottom\" isVisible={sortState}>\r\n      <Header>\r\n        <SortCloseButton onClick={closeFilterSort}>X</SortCloseButton>\r\n        <Title textType=\"h2\">Sortuj</Title>\r\n      </Header>\r\n      <Content>\r\n        {sortOptions.map((option, index) => (\r\n          <SortName\r\n            key={index}\r\n            textType=\"h3\"\r\n            onClick={(event) => handleSortOption(event.currentTarget.innerHTML)}\r\n          >\r\n            {option}\r\n          </SortName>\r\n        ))}\r\n      </Content>\r\n    </StyledSlideOut>\r\n  );\r\n};\r\n\r\nFilterSort.propTypes = {\r\n  setSortOption: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default FilterSort;\r\n","import styled from 'styled-components';\r\nimport Text from 'components/atoms/Text/Text';\r\nimport { breakpoints, colors } from 'theme/theme';\r\n\r\nexport const Wrapper = styled.main`\r\n  overflow: hidden;\r\n`;\r\n\r\nexport const Header = styled.header`\r\n  display: grid;\r\n  grid-template-rows: 65% 35%;\r\n  width: 100%;\r\n  margin: 0 0 20px;\r\n  justify-items: center;\r\n  align-items: center;\r\n\r\n  @media ${breakpoints.desktop} {\r\n    margin: 0 0 40px;\r\n  }\r\n`;\r\n\r\nexport const Title = styled(Text)`\r\n  font-size: 1.5rem;\r\n  height: 100%;\r\n  margin: 0;\r\n  padding: 30px 0;\r\n  color: ${colors.darkGrey};\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n`;\r\n\r\nexport const CategoriesWrapper = styled.div`\r\n  display: flex;\r\n  width: 100%;\r\n  height: 100%;\r\n\r\n  @media ${breakpoints.bigPhone} {\r\n    justify-content: flex-end;\r\n    border: 1px solid ${colors.veryLightGrey};\r\n  }\r\n`;\r\n\r\nexport const Category = styled(Text)`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  width: 50%;\r\n  height: 100%;\r\n  cursor: pointer;\r\n  border: 1px solid ${colors.veryLightGrey};\r\n  font-weight: normal;\r\n  padding: 25px 0;\r\n  margin: 0;\r\n\r\n  @media ${breakpoints.bigPhone} {\r\n    width: 25%;\r\n    border: none;\r\n    border-left: 1px solid ${colors.veryLightGrey};\r\n  }\r\n\r\n  @media ${breakpoints.desktop} {\r\n    width: 20%;\r\n\r\n    &:first-child {\r\n      display: none;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const Content = styled.div`\r\n  @media ${breakpoints.desktop} {\r\n    display: grid;\r\n    grid-template-columns: 15% 85%;\r\n    position: relative;\r\n    width: 100%;\r\n  }\r\n`;\r\n","import React, { useState } from 'react';\r\nimport { useMediaQuery } from 'react-responsive';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { openFilter, openSort } from 'store/navigation';\r\nimport { useQuery } from 'graphql-hooks';\r\nimport { useParams } from 'react-router-dom';\r\nimport { useContent } from 'hooks/useContent';\r\nimport { useSorting } from 'hooks/useSorting';\r\nimport { breakpoints } from 'theme/theme';\r\nimport MainTemplate from 'templates/MainTemplate/MainTemplate';\r\nimport FilterCategories from 'components/organisms/FilterCategories/FilterCategories';\r\nimport Products from 'components/organisms/Products/Products';\r\nimport FilterSort from 'components/organisms/FilterSort/FilterSort';\r\nimport {\r\n  Wrapper,\r\n  CategoriesWrapper,\r\n  Header,\r\n  Title,\r\n  Category,\r\n  Content,\r\n} from './ShopPage.styles';\r\n\r\nconst ShopPage = () => {\r\n  const [sortOption, setSortOption] = useState('');\r\n  const { id: title } = useParams();\r\n  const dispatch = useDispatch();\r\n  const sortState = useSelector((store) => store.nav.sort);\r\n  const sortOptions = {\r\n    alphabetical: 'A-Z',\r\n    reverse: 'Z-A',\r\n    byPrice: 'Od najtaÅ„szej',\r\n  };\r\n  const desktopView = useMediaQuery({ query: breakpoints.desktop });\r\n  const { sortAlphabetical, sortAlphabeticalReverse, sortByPrice } =\r\n    useSorting();\r\n  const openFilterCategories = () => dispatch(openFilter(true));\r\n  const openFilterSort = () =>\r\n    dispatch(openSort(desktopView ? !sortState : true));\r\n\r\n  const { productsQuery } = useContent();\r\n  const { loading, error, data } = useQuery(productsQuery);\r\n  if (loading) return 'Loading...';\r\n  if (error) return 'Something Bad Happened';\r\n  const products = data.allProducts;\r\n\r\n  const handleProducts = () => {\r\n    const filteredProducts = title\r\n      ? products.filter((item) => item.category === title)\r\n      : products;\r\n\r\n    switch (sortOption) {\r\n      case sortOptions.alphabetical:\r\n        return sortAlphabetical(filteredProducts);\r\n      case sortOptions.reverse:\r\n        return sortAlphabeticalReverse(filteredProducts);\r\n      case sortOptions.byPrice:\r\n        return sortByPrice(filteredProducts);\r\n      default:\r\n        return filteredProducts;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <MainTemplate>\r\n      <Wrapper>\r\n        <Header>\r\n          <Title textType=\"h2\">\r\n            {title ? title.toUpperCase() : 'POLECAMY'}\r\n          </Title>\r\n          <CategoriesWrapper>\r\n            <Category textType=\"h3\" onClick={openFilterCategories}>\r\n              Kategorie\r\n            </Category>\r\n            <Category textType=\"h3\" onClick={openFilterSort}>\r\n              Sortuj\r\n            </Category>\r\n          </CategoriesWrapper>\r\n        </Header>\r\n        <Content>\r\n          <Products products={handleProducts()} option={sortOption} />\r\n          <FilterCategories />\r\n          <FilterSort onClick={openFilterSort} setSortOption={setSortOption} />\r\n        </Content>\r\n      </Wrapper>\r\n    </MainTemplate>\r\n  );\r\n};\r\n\r\nexport default ShopPage;\r\n","export const useSorting = () => {\r\n  const sortAlphabetical = (array) =>\r\n    array.sort((a, b) => {\r\n      const first = a.name.toLowerCase();\r\n      const second = b.name.toLowerCase();\r\n      return first.localeCompare(second);\r\n    });\r\n\r\n  const sortAlphabeticalReverse = (array) =>\r\n    array.sort((a, b) => {\r\n      const first = a.name.toLowerCase();\r\n      const second = b.name.toLowerCase();\r\n      return second.localeCompare(first);\r\n    });\r\n\r\n  const sortByPrice = (array) =>\r\n    array.sort((a, b) => {\r\n      const first = a.price;\r\n      const second = b.price;\r\n      return first - second;\r\n    });\r\n\r\n  return { sortAlphabetical, sortAlphabeticalReverse, sortByPrice };\r\n};\r\n"],"sourceRoot":""}