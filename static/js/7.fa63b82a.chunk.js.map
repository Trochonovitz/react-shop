{"version":3,"sources":["pages/DetailPageBlogArticle/DetailPageBlogArticle.styles.js","pages/DetailPageBlogArticle/DetailPageBlogArticle.js","components/atoms/Lead/Lead.styles.js","components/atoms/Lead/Lead.js"],"names":["Image","styled","img","breakpoints","desktop","Wrapper","article","bigPhone","tablet","laptop","fullHD","Header","header","colors","white","Title","Text","darkGrey","Subtitle","Content","div","sizes","xxl","phone","m","DetailPageBlogArticle","id","useParams","blogArticleQuery","useContent","useQuery","loading","error","data","allArticles","srcSet","mainPhoto","responsiveImage","category","title","lead","date","_firstPublishedAt","content","MainTemplate","alt","textType","Lead","ReactHtmlParser","StyledText","lightGrey","children"],"mappings":"uOAIaA,EAAQC,IAAOC,IAAV,6GAGPC,IAAYC,SAMVC,EAAUJ,IAAOK,QAAV,8aAMTH,IAAYI,SAMZJ,IAAYK,OAIZL,IAAYM,OAKZN,IAAYC,QAIZD,IAAYO,QAKVC,EAASV,IAAOW,OAAV,0IACRT,IAAYI,SAECM,IAAOC,OAMlBC,EAAQd,YAAOe,IAAPf,CAAH,6DACPY,IAAOI,UAILC,EAAWjB,YAAOe,IAAPf,CAAH,+CAIRkB,EAAUlB,IAAOmB,IAAV,iHACHC,IAAMC,IAGZnB,IAAYoB,MACNF,IAAMG,G,OCjBRC,UAjCe,WAC5B,IAAQC,EAAOC,cAAPD,GACAE,EAAqBC,YAAW,KAAMH,GAAtCE,iBACR,EAAiCE,YAASF,GAAlCG,EAAR,EAAQA,QAASC,EAAjB,EAAiBA,MAAOC,EAAxB,EAAwBA,KAExB,GAAIF,EAAS,MAAO,aACpB,GAAIC,EAAO,MAAO,yBAElB,IAAM1B,EAAU2B,EAAKC,YAAY,GAC3BC,EAAS7B,EAAQ8B,UAAUC,gBAAgBF,OAC3CG,EAAWhC,EAAQgC,SACnBC,EAAQjC,EAAQiC,MAChBC,EAAOlC,EAAQkC,KACfC,EAAOnC,EAAQoC,kBACfC,EAAUrC,EAAQqC,QAExB,OACE,eAACC,EAAA,EAAD,WACE,cAAC5C,EAAD,CAAO6C,IAAI,+BAA+BV,OAAQA,IAClD,eAAC9B,EAAD,WACE,eAACM,EAAD,WACE,eAACO,EAAD,CAAU4B,SAAS,IAAnB,UACGL,EADH,MACYH,KAEZ,cAACvB,EAAD,CAAO+B,SAAS,KAAhB,SAAsBP,OAExB,cAACQ,EAAA,EAAD,UAAOP,IACP,cAACrB,EAAD,UAAU6B,IAAgBL,a,2ECvCrBM,EAAahD,YAAOe,IAAPf,CAAH,8SAENoB,IAAMC,IAMCT,IAAOqC,UAMlB/C,IAAYM,Q,OCbVsC,IAFF,SAAC,GAAD,IAAGI,EAAH,EAAGA,SAAH,OAAkB,cAACF,EAAD,UAAaE","file":"static/js/7.fa63b82a.chunk.js","sourcesContent":["import styled from 'styled-components';\r\nimport Text from 'components/atoms/Text/Text';\r\nimport { breakpoints, colors, sizes } from 'theme/theme';\r\n\r\nexport const Image = styled.img`\r\n  width: 100%;\r\n\r\n  @media ${breakpoints.desktop} {\r\n    height: 60vh;\r\n    object-fit: cover;\r\n  }\r\n`;\r\n\r\nexport const Wrapper = styled.article`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  padding: 30px;\r\n\r\n  @media ${breakpoints.bigPhone} {\r\n    position: relative;\r\n    padding: 120px 30px 30px;\r\n    width: calc(100% - 40px);\r\n  }\r\n\r\n  @media ${breakpoints.tablet} {\r\n    width: calc(100% - 150px);\r\n  }\r\n\r\n  @media ${breakpoints.laptop} {\r\n    width: 60%;\r\n    padding: 120px 60px 30px;\r\n  }\r\n\r\n  @media ${breakpoints.desktop} {\r\n    width: 60%;\r\n  }\r\n\r\n  @media ${breakpoints.fullHD} {\r\n    width: 40%;\r\n  }\r\n`;\r\n\r\nexport const Header = styled.header`\r\n  @media ${breakpoints.bigPhone} {\r\n    position: absolute;\r\n    background-color: ${colors.white};\r\n    top: -50px;\r\n    padding: 30px;\r\n  }\r\n`;\r\n\r\nexport const Title = styled(Text)`\r\n  color: ${colors.darkGrey};\r\n  margin: 20px 0;\r\n`;\r\n\r\nexport const Subtitle = styled(Text)`\r\n  margin: 10px 0;\r\n`;\r\n\r\nexport const Content = styled.div`\r\n  line-height: ${sizes.xxl};\r\n  margin: 10px 0 0;\r\n\r\n  @media ${breakpoints.phone} {\r\n    font-size: ${sizes.m};\r\n  }\r\n`;\r\n","import React from 'react';\r\nimport { useContent } from 'hooks/useContent';\r\nimport { useQuery } from 'graphql-hooks';\r\nimport { useParams } from 'react-router-dom';\r\nimport ReactHtmlParser from 'react-html-parser';\r\nimport Lead from 'components/atoms/Lead/Lead';\r\nimport MainTemplate from 'templates/MainTemplate/MainTemplate';\r\nimport {\r\n  Wrapper,\r\n  Header,\r\n  Image,\r\n  Title,\r\n  Content,\r\n  Subtitle,\r\n} from './DetailPageBlogArticle.styles';\r\n\r\nconst DetailPageBlogArticle = () => {\r\n  const { id } = useParams();\r\n  const { blogArticleQuery } = useContent(null, id);\r\n  const { loading, error, data } = useQuery(blogArticleQuery);\r\n\r\n  if (loading) return 'Loading...';\r\n  if (error) return 'Something Bad Happened';\r\n\r\n  const article = data.allArticles[0];\r\n  const srcSet = article.mainPhoto.responsiveImage.srcSet;\r\n  const category = article.category;\r\n  const title = article.title;\r\n  const lead = article.lead;\r\n  const date = article._firstPublishedAt;\r\n  const content = article.content;\r\n\r\n  return (\r\n    <MainTemplate>\r\n      <Image alt=\"blog's article visualisation\" srcSet={srcSet} />\r\n      <Wrapper>\r\n        <Header>\r\n          <Subtitle textType=\"p\">\r\n            {date} - {category}\r\n          </Subtitle>\r\n          <Title textType=\"h1\">{title}</Title>\r\n        </Header>\r\n        <Lead>{lead}</Lead>\r\n        <Content>{ReactHtmlParser(content)}</Content>\r\n      </Wrapper>\r\n    </MainTemplate>\r\n  );\r\n};\r\n\r\nexport default DetailPageBlogArticle;\r\n","import styled from 'styled-components';\r\nimport Text from 'components/atoms/Text/Text';\r\nimport { breakpoints, colors, sizes } from 'theme/theme';\r\n\r\nexport const StyledText = styled(Text)`\r\n  margin: 0 0 0 26px;\r\n  line-height: ${sizes.xxl};\r\n  position: relative;\r\n\r\n  &:before {\r\n    position: absolute;\r\n    content: '';\r\n    background-color: ${colors.lightGrey};\r\n    height: 100%;\r\n    width: 3px;\r\n    top: 0px;\r\n    left: -25px;\r\n\r\n    @media ${breakpoints.laptop} {\r\n      left: -40px;\r\n    }\r\n  }\r\n`;\r\n","import React from 'react';\r\nimport { StyledText } from './Lead.styles';\r\n\r\nconst Lead = ({ children }) => <StyledText>{children}</StyledText>;\r\n\r\nexport default Lead;\r\n"],"sourceRoot":""}