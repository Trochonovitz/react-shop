{"version":3,"sources":["pages/BlogPage/BlogPage.styles.js","pages/BlogPage/BlogPage.js"],"names":["Wrapper","styled","div","breakpoints","desktop","Title","Text","BlogContent","tablet","laptop","CategorySection","CategoryButton","button","activeCategory","pickedCategory","css","BlogPage","blogArticlesQuery","useContent","useQuery","loading","error","data","useState","setCategory","transition","useTransition","from","y","opacity","enter","AnimatedBlogArticle","animated","BlogArticle","allArticles","filteredArticles","filter","item","category","handleCategory","MainTemplate","textType","onClick","map","index","id","title","srcSet","mainPhoto","responsiveImage","lead","style","img"],"mappings":"6MAIaA,EAAUC,IAAOC,IAAV,4IAKTC,IAAYC,SAKVC,EAAQJ,YAAOK,IAAPL,CAAH,6FAMLM,EAAcN,IAAOC,IAAV,8NAGbC,IAAYK,OAMZL,IAAYM,QAKVC,EAAkBT,IAAOC,IAAV,6IAQfS,EAAiBV,IAAOW,OAAV,6PAWvB,qBAAGC,iBAAH,EAAmBC,gBAEnBC,YADA,4E,OCgCWC,UAxEE,WACf,IAAQC,EAAsBC,cAAtBD,kBACR,EAAiCE,YAASF,GAAlCG,EAAR,EAAQA,QAASC,EAAjB,EAAiBA,MAAOC,EAAxB,EAAwBA,KACxB,EAAsCC,mBAAS,aAA/C,mBAAOT,EAAP,KAAuBU,EAAvB,KACMC,EAAaC,wBAAcZ,EAAgB,CAC/Ca,KAAM,CAAEC,EAAG,IAAKC,QAAS,GACzBC,MAAO,CAAEF,EAAG,EAAGC,QAAS,KAEpBE,EAAsBC,mBAASC,KAErC,GAAIb,EAAS,MAAO,aACpB,GAAIC,EAAO,MAAO,yBAElB,IAAMa,EAAcZ,EAAKY,YACnBC,EACe,cAAnBrB,EACIoB,EACAA,EAAYE,QAAO,SAACC,GAAD,OAAUA,EAAKC,WAAaxB,KAC/CyB,EAAiB,SAACD,GAAD,OAAcd,EAAYc,IAEjD,OACE,cAACE,EAAA,EAAD,UACE,eAACxC,EAAD,WACE,cAACK,EAAD,CAAOoC,SAAS,KAAhB,oCACA,eAAC/B,EAAD,WACE,cAACC,EAAD,CACE+B,QAAS,kBAAMH,EAAe,cAC9B1B,eAAc,YACdC,eAAgBA,EAHlB,uBAOCoB,EAAYS,KAAI,WAAeC,GAAf,IAAGN,EAAH,EAAGA,SAAH,OACf,cAAC3B,EAAD,CAEE+B,QAAS,kBAAMH,EAAeD,IAC9BzB,eAAgByB,EAChBxB,eAAgBA,EAJlB,SAMGwB,GALIM,SASX,cAACrC,EAAD,UACG4B,EAAiBQ,KAChB,gBACEE,EADF,EACEA,GACAP,EAFF,EAEEA,SACAQ,EAHF,EAGEA,MAEqBC,EALvB,EAIEC,UACEC,gBAAmBF,OAErBG,EAPF,EAOEA,KAPF,OASEzB,GAAW,SAAC0B,GAAD,OACT,cAACpB,EAAD,CAEEoB,MAAOA,EACPN,GAAIA,EACJP,SAAUA,EACVQ,MAAOA,EACPM,IAAKL,EACLG,KAAMA,GANDL","file":"static/js/9.d6c23ca3.chunk.js","sourcesContent":["import styled, { css } from 'styled-components';\r\nimport { breakpoints } from 'theme/theme';\r\nimport Text from 'components/atoms/Text/Text';\r\n\r\nexport const Wrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n\r\n  @media ${breakpoints.desktop} {\r\n    width: 60%;\r\n  }\r\n`;\r\n\r\nexport const Title = styled(Text)`\r\n  padding: 30px 0;\r\n  font-size: 1.4rem;\r\n  text-align: center;\r\n`;\r\n\r\nexport const BlogContent = styled.div`\r\n  padding: 0 20px;\r\n\r\n  @media ${breakpoints.tablet} {\r\n    display: grid;\r\n    grid-template-columns: repeat(2, 1fr);\r\n    grid-gap: 20px;\r\n  }\r\n\r\n  @media ${breakpoints.laptop} {\r\n    grid-template-columns: repeat(3, 1fr);\r\n  }\r\n`;\r\n\r\nexport const CategorySection = styled.div`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  justify-content: center;\r\n  align-items: center;\r\n  margin: 0 0 30px 0;\r\n`;\r\n\r\nexport const CategoryButton = styled.button`\r\n  background: transparent;\r\n  border: none;\r\n  color: #595959;\r\n  font-family: 'Montserrat';\r\n  cursor: pointer;\r\n  text-transform: uppercase;\r\n  margin: 0 10px 10px 10px;\r\n  padding: 0px;\r\n  letter-spacing: 0.1em;\r\n\r\n  ${({ activeCategory, pickedCategory }) =>\r\n    activeCategory === pickedCategory &&\r\n    css`\r\n      border-bottom: 1px solid #595959;\r\n    `}\r\n`;\r\n","import React, { useState } from 'react';\r\nimport { useQuery } from 'graphql-hooks';\r\nimport { useTransition, animated } from '@react-spring/web';\r\nimport { useContent } from 'hooks/useContent';\r\nimport MainTemplate from 'templates/MainTemplate/MainTemplate';\r\nimport BlogArticle from 'components/molecules/BlogArticle/BlogArticle';\r\nimport {\r\n  Wrapper,\r\n  BlogContent,\r\n  CategoryButton,\r\n  Title,\r\n  CategorySection,\r\n} from './BlogPage.styles';\r\n\r\nconst BlogPage = () => {\r\n  const { blogArticlesQuery } = useContent();\r\n  const { loading, error, data } = useQuery(blogArticlesQuery);\r\n  const [pickedCategory, setCategory] = useState('wszystkie');\r\n  const transition = useTransition(pickedCategory, {\r\n    from: { y: 100, opacity: 0 },\r\n    enter: { y: 0, opacity: 1 },\r\n  });\r\n  const AnimatedBlogArticle = animated(BlogArticle);\r\n\r\n  if (loading) return 'Loading...';\r\n  if (error) return 'Something Bad Happened';\r\n\r\n  const allArticles = data.allArticles;\r\n  const filteredArticles =\r\n    pickedCategory === 'wszystkie'\r\n      ? allArticles\r\n      : allArticles.filter((item) => item.category === pickedCategory);\r\n  const handleCategory = (category) => setCategory(category);\r\n\r\n  return (\r\n    <MainTemplate>\r\n      <Wrapper>\r\n        <Title textType=\"h1\">Papiernicze inspiracje</Title>\r\n        <CategorySection>\r\n          <CategoryButton\r\n            onClick={() => handleCategory('wszystkie')}\r\n            activeCategory={`wszystkie`}\r\n            pickedCategory={pickedCategory}\r\n          >\r\n            wszystkie\r\n          </CategoryButton>\r\n          {allArticles.map(({ category }, index) => (\r\n            <CategoryButton\r\n              key={index}\r\n              onClick={() => handleCategory(category)}\r\n              activeCategory={category}\r\n              pickedCategory={pickedCategory}\r\n            >\r\n              {category}\r\n            </CategoryButton>\r\n          ))}\r\n        </CategorySection>\r\n        <BlogContent>\r\n          {filteredArticles.map(\r\n            ({\r\n              id,\r\n              category,\r\n              title,\r\n              mainPhoto: {\r\n                responsiveImage: { srcSet },\r\n              },\r\n              lead,\r\n            }) =>\r\n              transition((style) => (\r\n                <AnimatedBlogArticle\r\n                  key={id}\r\n                  style={style}\r\n                  id={id}\r\n                  category={category}\r\n                  title={title}\r\n                  img={srcSet}\r\n                  lead={lead}\r\n                />\r\n              ))\r\n          )}\r\n        </BlogContent>\r\n      </Wrapper>\r\n    </MainTemplate>\r\n  );\r\n};\r\n\r\nexport default BlogPage;\r\n"],"sourceRoot":""}